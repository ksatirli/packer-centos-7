{
  "builders": [
    {
      "ami_description": "{{ user `ami_description` }}",
      "ami_name": "{{ user `ami_name` }}-{{ user `timestamp` }}",
      "encrypt_boot": "{{ user `encrypt_boot` }}",
      "instance_type": "{{ user `instance_type` }}",
      "region": "{{ user `region` }}",
      "shutdown_behavior": "{{ user `shutdown_behavior` }}",
      "source_ami_filter": {
        "filters": {
          "name": "{{ user `source_ami_name` }}*",
          "root-device-type": "{{ user `source_ami_root_device_type` }}",
          "virtualization-type": "{{ user `source_ami_virtualization_type` }}"
        },
        "most_recent": "{{ user `source_ami_most_recent` }}",
        "owners": [
          "{{ user `source_ami_owner` }}"
        ]
      },
      "spot_price": "{{ user `spot_price` }}",
      "spot_price_auto_product": "{{ user `spot_price_auto_product` }}",
      "ssh_pty": "{{ user `ssh_pty` }}",
      "ssh_timeout": "{{ user `ssh_timeout` }}",
      "ssh_username": "{{ user `ssh_username` }}",
      "tags": {
        "Amazon_AMI_Management_Identifier": "{{ user `ami_name` }}",
        "Name": "{{ user `ami_name` }}"
      },
      "type": "amazon-ebs",
      "user_data_file": "{{ user `user_data_file` }}"
    }
  ],
  "post-processors": [
    {
      "identifier": "{{ user `ami_name` }}",
      "keep_releases": "{{ user `keep_releases` }}",
      "region": "{{ user `region` }}",
      "type": "amazon-ami-management"
    }
  ],
  "provisioners": [
    {
      "ansible_env_vars": [
        "ANSIBLE_HOST_KEY_CHECKING=False",
        "ANSIBLE_NOCOLOR=True",
        "ANSIBLE_SSH_ARGS='-o ForwardAgent=no -o ControlMaster=auto -o ControlPersist=yes'"
      ],
      "extra_arguments": [
        "{{ user `ansible_debug` }}",
        "--skip-tags={{ user `ansible_tags_skip` }}",
        "--extra-vars",
        "build_region={{ user `region` }} build_type={{ user `ami_name` }} build_desc={{ user `ami_description` }} build_slug={{ user `ami_slug` }}"
      ],
      "groups": [
        "{{ user `ansible_group` }}"
      ],
      "playbook_file": "{{ user `playbook_file` }}",
      "sftp_command": "{{ user `sftp_command` }}",
      "type": "ansible",
      "user": "{{ user `ssh_username` }}"
    },
    {
      "rake_file": "Rakefile",
      "rake_task": "serverspec:{{ user `rspec_target` }}",
      "type": "serverspec"
    }
  ]
}
